
group 'ru.itmo.idu'
version '3.8.2'

repositories {
    maven {
        url 'https://repo.osgeo.org/repository/release/'
    }
    maven {
        url 'https://repo.boundlessgeo.com/main'
    }
    mavenLocal()
    mavenCentral()
}

configurations {
    // com.vividsolutions.jts is migrated to org.locationtech.jts but some older libs do not know about it
    compile.exclude group: 'com.vividsolutions'
}

apply plugin: 'java'
apply plugin: 'maven-publish'

dependencies {
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.28'
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.28'

    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1'
    implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'


    implementation group: 'org.locationtech.jts', name: 'jts-core', version: '1.19.0'
    implementation group: 'org.locationtech.jts.io', name: 'jts-io-common', version: '1.19.0'

    implementation group: 'com.google.code.gson', name: 'gson', version: '2.9.1'

    implementation group: 'org.geotools', name: 'gt-main', version: '28.2'
    implementation group: 'org.geotools', name: 'gt-epsg-hsql', version: '28.2'
    implementation group: 'org.geotools', name: 'gt-opengis', version: '28.2'
    implementation group: 'org.geotools', name: 'gt-geojson', version: '28.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
}


task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier "sources"
}

task javadocJar(type: Jar) {
    from javadoc.destinationDir
    classifier "javadoc"
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/Urban-Research-Lab/jts-geometry-utils")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}

test {
    useJUnitPlatform()
}